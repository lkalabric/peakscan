Exercicio.Bioestatistica.no.R <- read.csv("C:/Users/kalab/Dropbox/Projetos/2019 Kalabric & Daniela, Luan, Luiza - HEV&HAV/Dados da pesquisa/Exercicio Bioestatistica no R.csv", header=FALSE)
View(Exercicio.Bioestatistica.no.R)
View(Exercicio.Bioestatistica.no.R)
View(Exercicio.Bioestatistica.no.R)
View(Exercicio.Bioestatistica.no.R)
Exercicio.Bioestatistica.no.R <- read.csv("C:/Users/kalab/Dropbox/Projetos/2019 Kalabric & Daniela, Luan, Luiza - HEV&HAV/Dados da pesquisa/Exercicio Bioestatistica no R.csv")
View(Exercicio.Bioestatistica.no.R)
attacc(Exercicio.Bioestatistica.no.R)
attach(Exercicio.Bioestatistica.no.R)
mytable<-table(porco2_RECODED,diag_hev_igg_sorologia_RECODED)
mytable
chisq.test(mytable)
Exercicio.Bioestatistica.no.R <- read.csv("C:/Users/kalab/Dropbox/Projetos/2019 Kalabric & Daniela, Luan, Luiza - HEV&HAV/Dados da pesquisa/Exercicio Bioestatistica no R.csv")
View(Exercicio.Bioestatistica.no.R)
attach(Exercicio.Bioestatistica.no.R)
mytable <- table(porco2_RECODED,diag_hev_igg_sorologia_RECODED)
chisq.test(mytable)
fisher.test(mytable)
install.packages("splancs")
library(splancs)
install.packages(c("cli", "crayon", "fansi", "glue", "gplots", "gtools", "hms", "lifecycle", "magrittr", "pillar", "R6", "Rcpp", "readxl", "rlang", "sp", "splancs", "tibble", "utf8", "vctrs"))
install.packages(c("cli", "fansi", "glue", "gtools", "magrittr", "Rcpp", "readxl", "rlang", "sp", "splancs", "tibble", "utf8", "vctrs"))
install.packages("cli")
`Tabela.1.Pi2021a&b.CC` <- read.csv("C:/Users/kalab/OneDrive - FIOCRUZ/Projetos/2019 Kalabric & Camila - Schisto PirajÃ¡/Dados da pesquisa/Tabela 1 Pi2021a&b CC.csv", header=FALSE)
View(`Tabela.1.Pi2021a&b.CC`)
frequencies <- (`Tabela.1.Pi2021a&b.CC`, id.vars = "sexo")
demo()
library(help = "stats")
`Treinamento.Epinfo&R` <- read.csv("C:/Users/kalab/Downloads/Treinamento Epinfo&R.csv", header=FALSE)
View(`Treinamento.Epinfo&R`)
Exercicio.Bioestatistica.no.R <- read.csv("C:/Users/kalab/Dropbox/Projetos/2019 Kalabric & Daniela, Luan, Luiza - HEV&HAV/Dados da pesquisa/Exercicio Bioestatistica no R.csv")
rm(`Treinamento.Epinfo&R`)
`Treinamento.Epinfo&R` <- read.csv("C:/Users/kalab/Downloads/Treinamento Epinfo&R.csv", header=FALSE)
View(`Treinamento.Epinfo&R`)
rm(`Treinamento.Epinfo&R`)
`Treinamento.Epinfo&R` <- read.csv("C:/Users/kalab/Downloads/Treinamento Epinfo&R.csv", header=TRUE)
View(`Treinamento.Epinfo&R`)
rm(`Treinamento.Epinfo&R`)
`Treinamento.Epinfo&R` <- read.csv("C:/Users/kalab/Downloads/Treinamento Epinfo&R.csv", header=TRUE)
View(`Treinamento.Epinfo&R`)
objects()
install.packages("Fragman")
install.packages("Rtools")
install.packages("Rtools")
install.packages("Rtools")
install.packages("installr")
library(installr)
install.packages("Fragman")
library(Fragman)
source('C:\Temp\P3_Pipeline\manual_rescore.R')
source()
source('P3_Pipeline/manual_rescore.R')
source('P3_Pipeline/replace_scores_df.R')
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(echo = TRUE)
###############################################################################
#                                                                             #
#                Introduction to Fragman peak scoring                         #
#                                                                             #
#   file:///Users/Kathleen/Downloads/fragman_intro_scoring.html               #
#                                                                             #
#    Written in R version 4.1.2 using R Studio RStudio 2022.02.0+443          #
#                                                                             #
#                                                                             #
###############################################################################
# Load required packages
library("Fragman") #1.0.9 - Peak scoring functions
library("tidyr") #1.1.4 - Tidyverse best practices
library("dplyr") #1.0.7 - Tidyverse best practices
library("magrittr") #2.0.1 - Use of L->R piping of functions
library("qpdf") #1.1 - PDF manipulations
#Load JB Additional Scripts
setwd("~/Documents/GitHub/P3_Pipeline/")
knitr::opts_chunk$set(echo = TRUE)
###############################################################################
#                                                                             #
#                Introduction to Fragman peak scoring                         #
#                                                                             #
#   file:///Users/Kathleen/Downloads/fragman_intro_scoring.html               #
#                                                                             #
#    Written in R version 4.1.2 using R Studio RStudio 2022.02.0+443          #
#                                                                             #
#                                                                             #
###############################################################################
# Load required packages
library("Fragman") #1.0.9 - Peak scoring functions
library("tidyr") #1.1.4 - Tidyverse best practices
library("dplyr") #1.0.7 - Tidyverse best practices
library("magrittr") #2.0.1 - Use of L->R piping of functions
library("qpdf") #1.1 - PDF manipulations
#Load JB Additional Scripts
setwd("~\Documents\GitHub\P3_Pipeline\")
pacman()
if (!require('pacman')) install.packages('pacman'); library('pacman')
pacman()
remove.packages("pacman")
remove.packages("Fragman")
# Install Fragman if no installed
list.of.packages <- c("Fragman","pacman")
new.packages <- list.of.packages[!(list.of.packages %in% installed.packages()[,"Package"])]
if(length(new.packages)) install.packages(new.packages)
# Loads package Fragman
library('Fragman')
# The core of the package Fragman and the workflow of the fragment analysis rely in 4 functions:
# 1) storing.inds (function in charge of reading the FSA or txt(CQS) files and storing them with a list structure)
fsa_dir <- "~/GitHub/peakscan/fsa"
# Original method
my_samples <- storing.inds(fsa_dir, channels=NULL, fourier=TRUE,
saturated=TRUE, lets.pullup=TRUE,
plotting=FALSE, rawPlot=FALSE,
llength=3000, ulength=80000)
# The core of the package Fragman and the workflow of the fragment analysis rely in 4 functions:
# 1) storing.inds (function in charge of reading the FSA or txt(CQS) files and storing them with a list structure)
fsa_dir <- "~/GitHub/peakscan/peak-analysis"
# Original method
my_samples <- storing.inds(fsa_dir, channels=NULL, fourier=TRUE,
saturated=TRUE, lets.pullup=TRUE,
plotting=FALSE, rawPlot=FALSE,
llength=3000, ulength=80000)
# Set the working directory
setwd("~/GitHub/peakscan/peak-analysis")
# The core of the package Fragman and the workflow of the fragment analysis rely in 4 functions:
# 1) storing.inds (function in charge of reading the FSA or txt(CQS) files and storing them with a list structure)
fsa_dir <- "~/GitHub/peakscan/fsa"
# Original method
my_samples <- storing.inds(fsa_dir, channels=NULL, fourier=TRUE,
saturated=TRUE, lets.pullup=TRUE,
plotting=FALSE, rawPlot=FALSE,
llength=3000, ulength=80000)
# JB method
fsa_data <- storing_inds(fsa_dir, channels = 5, rawPlot = TRUE, fourier = TRUE, saturated = TRUE, lets.pullup = FALSE)
# JB method
source("storing_inds.R")
# Loads package Fragman
library('Fragman')
# Set the working directory
setwd("~/GitHub/peakscan/peak-analysis")
# The core of the package Fragman and the workflow of the fragment analysis rely in 4 functions:
# 1) storing.inds (function in charge of reading the FSA or txt(CQS) files and storing them with a list structure)
fsa_dir <- "~/GitHub/peakscan/fsa"
# Original method
my_samples <- storing.inds(fsa_dir, channels=NULL, fourier=TRUE,
saturated=TRUE, lets.pullup=TRUE,
plotting=FALSE, rawPlot=FALSE,
llength=3000, ulength=80000)
# The core of the package Fragman and the workflow of the fragment analysis rely in 4 functions:
# 1) storing.inds (function in charge of reading the FSA or txt(CQS) files and storing them with a list structure)
fsa_dir <- "GitHub/peakscan/fsa"
# Original method
my_samples <- storing.inds(fsa_dir, channels=NULL, fourier=TRUE,
saturated=TRUE, lets.pullup=TRUE,
plotting=FALSE, rawPlot=FALSE,
llength=3000, ulength=80000)
# JB method
source("storing_inds.R")
fsa_data <- storing_inds(fsa_dir, channels = 5, rawPlot = TRUE, fourier = TRUE, saturated = TRUE, lets.pullup = FALSE)
# The core of the package Fragman and the workflow of the fragment analysis rely in 4 functions:
# 1) storing.inds (function in charge of reading the FSA or txt(CQS) files and storing them with a list structure)
fsa_dir <- "~/GitHub/peakscan/fsa"
# Original method
# Set the working directory
setwd("~/GitHub/peakscan/peak-analysis")
my_samples <- storing.inds(fsa_dir, channels=NULL, fourier=TRUE,
saturated=TRUE, lets.pullup=TRUE,
plotting=FALSE, rawPlot=FALSE,
llength=3000, ulength=80000)
# Original method
# Set the working directory
setwd("~/GitHub/peakscan/peak-analysis/")
my_samples <- storing.inds(fsa_dir, channels=NULL, fourier=TRUE,
saturated=TRUE, lets.pullup=TRUE,
plotting=FALSE, rawPlot=FALSE,
llength=3000, ulength=80000)
# The core of the package Fragman and the workflow of the fragment analysis rely in 4 functions:
# 1) storing.inds (function in charge of reading the FSA or txt(CQS) files and storing them with a list structure)
fsa_dir <- "~/GitHub/peakscan/fsa2"
# Original method
# Set the working directory
setwd("~/GitHub/peakscan/peak-analysis/")
my_samples <- storing.inds(fsa_dir, channels=NULL, fourier=TRUE,
saturated=TRUE, lets.pullup=TRUE,
plotting=FALSE, rawPlot=FALSE,
llength=3000, ulength=80000)
# The core of the package Fragman and the workflow of the fragment analysis rely in 4 functions:
# 1) storing.inds (function in charge of reading the FSA or txt(CQS) files and storing them with a list structure)
fsa_dir <- "~/GitHub/peakscan/fsa"
# Original method
# Set the working directory
setwd("~/GitHub/peakscan/peak-analysis/")
# Original method
# Set the working directory
# setwd("~/GitHub/peakscan/peak-analysis/")
my_samples <- storing.inds(fsa_dir, channels=NULL, fourier=TRUE,
saturated=TRUE, lets.pullup=TRUE,
plotting=FALSE, rawPlot=FALSE,
llength=3000, ulength=80000)
# Original method
# Set the working directory
# setwd("~/GitHub/peakscan/peak-analysis/")
setwd("C:\Users\kalab\OneDrive\Documentos\GitHub\peakscan\peak-analysis")
my_samples <- storing.inds(fsa_dir, channels=5, fourier=TRUE,
saturated=TRUE, lets.pullup=TRUE,
plotting=FALSE, rawPlot=FALSE,
llength=3000, ulength=80000)
getwd()
# Original method
# Set the working directory
# setwd("~/GitHub/peakscan/peak-analysis/")
setwd("C:\Users\kalab\OneDrive\Documentos\GitHub\peakscan\peak-analysis")
# Original method
# Set the working directory
# setwd("~/GitHub/peakscan/peak-analysis/")
setwd("C:/Users/kalab/OneDrive/Documentos/GitHub/peakscan/peak-analysis")
my_samples <- storing.inds(fsa_dir, channels=5, fourier=TRUE,
saturated=TRUE, lets.pullup=TRUE,
plotting=FALSE, rawPlot=FALSE,
llength=3000, ulength=80000)
source("~/GitHub/peakscan/useFragman.R")
# Required packages check and autoinstallation
list.of.packages <- c("Fragman","pacman")
new.packages <- list.of.packages[!(list.of.packages %in% installed.packages()[,"Package"])]
if(length(new.packages)) install.packages(new.packages)
# Loads package Fragman
library('Fragman')
# The core of the package Fragman and the workflow of the fragment analysis rely in 4 functions:
# 1) storing.inds (function in charge of reading the FSA or txt(CQS) files and storing them with a list structure)
fsa_dir <- "~/GitHub/peakscan/fsa"
# Original method
# Set the working directory
# setwd("~/GitHub/peakscan/peak-analysis/")
setwd("C:/Users/kalab/OneDrive/Documentos/GitHub/peakscan/peak-analysis")
my_samples <- storing.inds(fsa_dir, channels=5, fourier=TRUE,
saturated=TRUE, lets.pullup=TRUE,
plotting=FALSE, rawPlot=FALSE,
llength=3000, ulength=80000)
# Original method
fsa_data <- storing.inds(fsa_dir)
```{r header, include=FALSE}
```{r header, include=FALSE}
```{r header, include=FALSE}
# Script name: useFragman.R
# Author: Luciano Kalabric
# Purpose: Literally implement package 'Fragman' to peak scan fsa files
# Creation date: Sept 23 2022
# Last update: Sept 24 2022
```
# Check required packages and autoinstall ======================================
list.of.packages <- c("Fragman","pacman")
```{r header, include=FALSE}
```{r chunk_header}
```{r, chunk_header}
# Script name: useFragman.R
# Author: Luciano Kalabric
# Purpose: Literally implement package 'Fragman' to peak scan fsa files
# Creation date: Sept 23 2022
# Last update: Sept 24 2022
```
# Check required packages and autoinstall ======================================
list.of.packages <- c("Fragman","pacman")
```
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(echo = TRUE)
